# Logging Level - valid levels: CRITICAL,ERROR,WARNING,INFO,DEBUG,NOTSET
# Normally left at INFO.  Set to DEBUG for more logging.
LOGLEVEL="INFO"

# URL for your Tube Archivist server, including port.
TA_SERVER = "http://192.168.1.11:8000"

# TA API token obtained from:
# <TA_SERVER>/settings/#integrations
TA_TOKEN = "c0ff142e1c336e9f43be560b5c942d61e7e7c7fb"

# The host path to the TA Docker cache channel folder.
# If you do not have access to the cache folder, leave it empty: "".
TA_CACHE = "/home/me/dockers/YouTube"

# If TA runs in Docker, enable this to automatically omit "/cache" prefix.
TA_CACHE_DOCKER = "False"

# Folder where TA stores its videos with Channel/Title ID's
TA_MEDIA_FOLDER = "/home/me/Videos/YouTube"

# Folder where this script will put human readable symlinks to TA's
# obfuscated videos, as well as per video NFO files for media managers.
TARGET_FOLDER = "/home/me/Videos/YT-Subs"

# "True" for enable, "False" for disable
NOTIFICATIONS_ENABLED = "True"

# Mail info for sending notifications
MAIL_USER="me@x.com"
# Can use 1 or multiple destination emails seperated by ','
MAIL_RECIPIENTS="me@x.com,you@x.com"

# Whether this script should generate media NFO files
# "True" for enable, "False" for disable
GENERATE_NFO = "True"

# Whether this script should symlink subtitles
# "True" for enable, "False" for disable
SYMLINK_SUBS = "True"

# Instruction to tell apprise how to notify.  Read all of the options
# here: https://pypi.org/project/apprise/
APPRISE_LINK = "mailto://<username>:<password>@gmail.com"

# Stop processing channel once an already indexed video is reached
QUICK = "True"

# Set this to the port you'd like to be notified on.
# Make sure you have no conflicts.
# Change your apprise links in TA settings to match:
# json://<IP/hostname where TA helper will run>:<PORT>/tahelper-trigger
# For example: json://192.168.1.11:8001/ta-helper-trigger
APPRISE_TRIGGER_PORT=8001

# Set this path to point to your ta-helper.py script
TA_HELPER_SCRIPT="/home/me/projects/ta-helper/ta-helper.py"

# TA can be configured to delete watched videos.  If a video is deleted the
# symbolic link to it in the TARGET_FOLDER becomes bad.  The bad symlinks can
# be used to trigger resource cleanup of deleted videos.  So if the symlink
# to video "x.mp4" becomes bad then we should delete the x.NFO file and x.vtt
# and x.mp4 symlinks.
CLEANUP_DELETED_VIDEOS = "False"
